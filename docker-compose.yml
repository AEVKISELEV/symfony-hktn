version: '3.8'

services:
  nginx:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=dev
    image: undefined/nginx
    container_name: nginx
    ports:
      - ${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}
      - ${NGINX_HTTPS_PORT}:${NGINX_HTTPS_PORT}
    volumes:
      - ./docker/nginx/conf.d/dev:/etc/nginx/conf.d
      - ./www:${ROOT_DIR}
    depends_on:
      - app
    networks:
      - app-network

  app:
    build:
      context: docker/php
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${ENVIRONMENT:-production}
    image: undefined/php
    container_name: app
    env_file:
      - .env
    volumes:
      - ./www:${ROOT_DIR}
    depends_on:
      - postgres
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_HOST}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER_NAME}
    volumes:
      - postgres_data:${POSTGRES_DATA_DIR}
    networks:
      - app-network

  rabbitmq:
    container_name: ${RABBITMQ_HOST}
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER_NAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_ADMIN_PORT}:${RABBITMQ_ADMIN_PORT}
    networks:
      - app-network

  go:
    build: ./go
    container_name: go
    networks:
      - app-network
    environment:
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_USER_NAME: ${RABBITMQ_USER_NAME}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_ADMIN_PORT: ${RABBITMQ_ADMIN_PORT}
      OPENAI_TOKEN: ${OPENAI_TOKEN}
      HTTP_PROXY: ${HTTP_PROXY}


networks:
  app-network:
    driver: bridge
volumes:
  postgres_data:
    driver: local